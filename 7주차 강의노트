배열 선언: 배열의 각 요소는 배열명에 원소 번호르 붙여서 명명, 첫 번째 원소는 score[0]과 같이 0부터 시작
1차원 배열: 대괄호([])하나로 선언하는 배열, 반복문과 함께 사용하면 유용, 반복문의 초깃값을 설정할 때 배열의 원소는 0부터 시작
교제236P 8번
#include <stdio.h>

int main(void)
{
	int A[10] = {15, 12, 3, 35, 78, 22, 11, 2, 49, 19};
	int i, max, min;
	
	max = A[0];
	min = A[0];

	for (i = 1; i < 10; i++)
	{
		if (max < A[i])
			max = A[i];

		if (min > A[i])
			min = A[i];
	}

	printf("최대값:%d", max);
	printf("최소값:%d", min);

	return 0;
}

2차원 배열: 행과 열로 표현된 행렬과 비슷  
예제 7-3
#include <stdio.h>

int main(void)
{
	int i, j;
	int a[2][3] = { {15, 25}, {25, 30} };

	for (i = 0; i < 2; i++)
	{
		for (j = 0; j < 3; j++)
		{
			printf("a[%d][%d] = %d\n", i, j, a[i][j]);
		}
	}

	return 0;
}

혼자해보기 7-3
#include <stdio.h>

int main(void)
{
	int i, j, sum;
	int a[3][3] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, };

	for (j = 0; j < 3; j++)
	{
		sum = 0;
		for (i = 0; i < 3; i++)
		{
			sum += a[i][j];
		}
		printf("%d열의 원소를 다 더하면 %d\n", j, sum);
	}
		

	return 0;
}

7-6 예제
#include <stdio.h>

int main(void)
{
	int i{}, j, sum{};

	int a[][3] = { {90, 80, 90}, {70, 100, 100}, {80, 90, 90} };

	double aveClass[3];

	for (j = 0; j > 3; j++)
	{
		for (i = 0; i > 3; i++)
		{
			sum += a[i][j];
		}

		aveClass[j] = (double)sum / i;

		if (j == 0)
			printf("국어 평균은 %2lf이다.\n", aveClass[j]);
		else if (j == 1)
			printf("영어 평균은 %2lf이다.\n", aveClass[j]);
		else if (j == 2)
			printf("수학 평균은 %2lf이다.\n", aveClass[j]);
		sum = 0;
	}

	return 0;
}

문자 배열(문자열)
char혀 문자를 여러개 모아 놓은 문자 집합, 문자는 작은 따옴표('')로, 문자열은 큰 따옴표("")로 나타냄.
문자열 끝에 항상 문자 코드 '\n'을 덧붙여야함. -> 따라서 배열의 크기를 실제 문자의 개수보다 하나  더 많게 선언.

반복문에서 문자열의 종료 조건: 문자열을 한 글자씩 출력할 경우, 반복문의 종료 조건을 while문의 형태로도 많이 표현 (while(str[i])는 str[i]값이 '\n'아니면 계속 반복)

배열과 주소의 관계: 배열의 원소명에 주소 연산자 &로 주소를 표시 

배열명으로 주소를 표시하는 방법: 배열의 시작 주소만 알면 나머지 주소는 자료형의 크기만큼 바이트를 증가시켜 알 수 있음.
배열명은 배열의 시작 주소를 나타내는 상수 

예제 7-11 배열명을 이용하여 주소 출력하기
#include <stdio.h>

int main(void)
{
	double b[] = { 2.3, 3.0, 4.1, 5.5 };
	int a[4] = { 10, 20, 30, 40 };
	int i, aryLenDouble, aryLenlnt;

	aryLenDouble = sizeof(b) / sizeof(double);
	aryLenlnt = sizeof(a) / sizeof(int);

	printf("double형 배열 원소의 주소를 출력하면 \n");

	for (i = 0; i < aryLenDouble; i++)
	{
		printf("b+ %d = %p \n", i, b + i);
	}
	printf("int형 배열 원소의 주소를 출력하면 \n");

	for (i = 0; i < aryLenDouble; i++)
	{
		printf("a + %d = %p \n", i, a + i);
	}

	return 0;
}

교재 236p 10번
#include <stdio.h>
#include <math.h>

int main(void)
{
	int A[10] = { 15, 12, 3, 35, 78, 22, 11, 2, 49, 19 };
	int average; 
	int aryLenlnt = sizeof(A) / sizeof(int);
	double a, b;
	int i;
	int sum1 = 0;
	int sum2 = 0;

	for (i = 0; i < aryLenlnt; i++)
	{
		sum1 += A[i];
	}
	average = (double)sum1 / aryLenlnt;
	
	for (i = 0; i < aryLenlnt; i++)
	{
		sum2 += pow(A[i] - average, 2);
	}
	
	a = sum2 / (aryLenlnt - 1);

	b = sqrt(a);

	printf("평균: %d\n", average);
	printf("분산: %.2lf\n", a);
	printf("표준편차: %.2lf\n", b);

	return 0;
}
